#!/bin/bash
#
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'miniflux'
        pgrole2: 'postgres'
        intport: '8080'
        extport: '8084'
        intport2: '5432'
        extport2: '5432'
        image: 'miniflux/miniflux:latest'
        image2: 'postgres:latest'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting {{pgrole}} Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}:/etc/miniflux'
          - '/etc/localtime:/etc/localtime:ro'

    - name: 'Setting {{pgrole2}} Volumes'
      set_fact:
        pg_volumes2:
          - '/opt/appdata/{{pgrole2}}:/var/lib/postgresql/data'
          - '/etc/localtime:/etc/localtime:ro'

    - name: 'Setting {{pgrole}} ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'
          DATABASE_URL: 'postgres://miniflux:secret@postgres/miniflux?sslmode=disable'
          RUN_MIGRATIONS: '1'
          CREATE_ADMIN: '1'
          ADMIN_USERNAME: 'admin'
          ADMIN_PASSWORD: 'test123'

    - name: 'Setting {{pgrole2}} ENV'
      set_fact:
        pg_env2:
          PUID: '1000'
          PGID: '1000'
          POSTGRES_USER: 'miniflux'
          POSTGRES_PASSWORD: 'secret'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole2}}'
      docker_container:
        name: '{{pgrole2}}'
        image: '{{image2}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport2}}:{{intport2}}'
        volumes: '{{pg_volumes2}}'
        env: '{{pg_env2}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole2}}'
        state: started

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'        
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        links:
          - "postgres:postgres"
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'
