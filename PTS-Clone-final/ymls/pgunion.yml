#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Authors:    Admin9705, Deiteq, and many PGBlitz Contributors
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: include rClone aliases
      include_tasks: '/opt/pgclone/bin/bin.yml'

    - name: include rClone cron jobs
      include_tasks: '/opt/pgclone/ymls/cron.yml'

    - name: Register HD Path
      shell: 'cat /var/plexguide/server.hd.path'
      register: hdpath

    - name: Register vfs_dcs
      shell: 'cat /var/plexguide/vfs_dcs'
      register: vfs_dcs

    - debug: msg="Blitz Type - {{transport}}"
    - debug: msg="HD Path - {{hdpath.stdout}}"

    - name: 'If Fact Matches - Encrypted Blitz'
      set_fact:
        path: 'remotes = gdrive: tdrive: gcrypt: tcrypt: {{hdpath.stdout}}/move'
      when: transport == "be"

    - name: 'If Fact Matches - Encrypted Move'
      set_fact:
        path: 'remotes = gdrive: gcrypt: {{hdpath.stdout}}/move'
      when: transport == "me"

    - name: 'If Fact Matches - UnEncrypted Blitz'
      set_fact:
        path: 'remotes = gdrive: tdrive: {{hdpath.stdout}}/move'
      when: transport == "bu"

    - name: 'If Fact Matches - UnEncrypted Move'
      set_fact:
        path: 'remotes = gdrive: {{hdpath.stdout}}/move'
      when: transport == "mu"

    - name: Creating required paths
      file: 'path={{hdpath.stdout}}/{{item}} state=directory mode=0755 owner=1000 group=1000 recurse=true'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: 'Setting ownership on logs'
      shell: 'chown -R 1000:1000 /var/plexguide/logs'

    - name: 'Setting ownership'
      shell: 'chown -R 1000:1000 {{hdpath.stdout}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: 'Setting permissions'
      shell: 'chmod -R 755 {{hdpath.stdout}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: Transport Type
      shell: 'echo "" >> /opt/appdata/plexguide/rclone.conf'

    - name: Transport Type
      shell: 'sed -i -e "/\[(unionfs|pgunion)\]/,+2d" /opt/appdata/plexguide/rclone.conf'

    - name: Transport Type
      shell: |
        echo "[pgunion]" >> /opt/appdata/plexguide/rclone.conf
        echo "type = union" >> /opt/appdata/plexguide/rclone.conf
        echo "{{path}}" >> /opt/appdata/plexguide/rclone.conf

    - name: Install Union Script
      template:
        src: /opt/pgclone/mounts/pgunion.sh
        dest: /opt/appdata/plexguide/pgunion.sh
        force: yes

    - name: Install Union Service
      template:
        src: /opt/pgclone/mounts/pgunion.service
        dest: /etc/systemd/system/pgunion.service
        force: yes

    - name: Reload Union Service
      systemd:
        daemon_reload: yes
        enabled: yes
        state: reloaded
        name: pgunion

    - name: 'Waiting for Union to initialize'
      wait_for: timeout=2
